# -*- coding: utf-8 -*-
"""Day-5 DS practicals.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Yg_TZt-zWti7VnVWmTHAr31R0TUSaVn1

#1.Matplotlib

1.1 Basic matplotlib plot

Line plot
"""

import matplotlib.pyplot as plt
import numpy as np

x = np.linspace(0, 10, 100)
y = np.sin(x)

plt.plot(x, y, label="Sine Wave")
plt.xlabel("X Axis")
plt.ylabel("Y Axis")
plt.title("Simple Line Plot")
plt.legend()
plt.show()

"""1.2 Bar chart"""

categories = ['A', 'B', 'C', 'D']
values = [10, 25, 15, 30]

plt.figure(figsize=(6, 4))
plt.bar(categories, values, color='purple')
plt.xlabel("Categories")
plt.ylabel("Values")
plt.title("Bar Chart Example")
plt.show()

"""1.3 Histogram(Distribution of data)"""

data = np.random.randn(1000)

plt.figure(figsize=(7, 5))
plt.hist(data, bins=30, color='green', edgecolor='black', alpha=0.7)
plt.xlabel("Value")
plt.ylabel("Frequency")
plt.title("Histogram Example")
plt.show()

"""#2.Seaborn-Statistical data visualization

2.1 Histogram and KDE plot
"""

import seaborn as sns
import pandas as pd

# Creating sample data
data = np.random.randn(1000)
df = pd.DataFrame(data, columns=['Values'])

# Plot
sns.histplot(df['Values'], bins=30, kde=True, color='blue')
plt.title("Histogram with KDE")
plt.show()

"""2.2 Box plot(Detecting outliers)"""

tips = sns.load_dataset('tips')

plt.figure(figsize=(6, 4))
sns.boxplot(x=tips['total_bill'])
plt.title("Box Plot of Total Bill")
plt.show()

"""2.3 Pair plot(Exploring relationships)"""

sns.pairplot(tips, hue='sex')
plt.show()

"""2.4 Heatmap(correlation analysis)"""

import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd

try:
    tips = sns.load_dataset('tips')

    corr_matrix = tips.corr()

    plt.figure(figsize=(7, 5))
    sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', fmt=".2f")
    plt.title("Correlation Heatmap")
    plt.show()

except ImportError:
    print("Error: Make sure you have 'seaborn' and 'matplotlib' installed.")
except Exception as e:
    print(f"An error occurred: {e}")

"""#3.Pyplot

3.1 Interactive line plot
"""

import plotly.express as px

df = pd.DataFrame({
    "x": np.linspace(0, 10, 100),
    "y": np.sin(np.linspace(0, 10, 100))
})

fig = px.line(df, x='x', y='y', title="Interactive Sine Wave")
fig.show()

"""3.2 Interactive scatter plot"""

fig = px.scatter(tips, x='total_bill', y='tip', color='sex', size='size', title="Total Bill vs Tip")
fig.show()

"""3.3 Interactive 3D scatter plot"""

import plotly.graph_objects as go

fig = go.Figure(data=[go.Scatter3d(
    x=tips['total_bill'],
    y=tips['tip'],
    z=tips['size'],
    mode='markers',
    marker=dict(size=5, color=tips['total_bill'], colorscale='Viridis')
)])

fig.update_layout(title="3D Scatter Plot of Total Bill, Tip & Size")
fig.show()