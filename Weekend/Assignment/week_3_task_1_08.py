# -*- coding: utf-8 -*-
"""Week 3 task 1-08.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xWSLYIm65gSa7OaM3bcSmrgratdmD6NS

8.Saving processed data
"""

import pandas as pd
import os

# Get the current working directory
current_directory = os.getcwd()

# Construct the full file path
file_path = os.path.join(current_directory, 'patient_data.csv')

# Load the patient data
try:
    df = pd.read_csv(file_path)
except FileNotFoundError:
    print(f"Error: File not found at {file_path}. Please make sure the file exists and the path is correct.")
    # You might want to exit the script here or handle the error in a different way
    # Instead of exiting, create an empty DataFrame if the file is not found
    df = pd.DataFrame()  # Create an empty DataFrame
    #exit()

# Check if the DataFrame is empty before proceeding
if not df.empty:
    # Drop duplicate rows
    df = df.drop_duplicates()

    # Handle missing values
    # Only fill missing values if the corresponding columns exist
    if 'Age' in df.columns:
        df['Age'].fillna(df['Age'].mean(), inplace=True)
    if 'Gender' in df.columns:
        df['Gender'].fillna(df['Gender'].mode()[0], inplace=True)
    if 'Diagnosis' in df.columns:
        df['Diagnosis'].fillna('Unknown', inplace=True)
    else:
        df['Diagnosis'] = 'Unknown' # Create the column if it doesn't exist

    # Convert date columns to proper datetime format
    if 'AdmissionDate' in df.columns:
        df['AdmissionDate'] = pd.to_datetime(df['AdmissionDate'], errors='coerce')

    # Standardize categorical values
    if 'Gender' in df.columns:
        df['Gender'] = df['Gender'].str.capitalize()

# Save the cleaned data to a new CSV file
cleaned_file_path = os.path.join(current_directory, 'cleaned_patient_data.csv')
df.to_csv(cleaned_file_path, index=False)

print(f"Cleaned patient data has been saved as {cleaned_file_path}.")